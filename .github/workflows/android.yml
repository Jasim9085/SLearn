name: Android CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # Step 2: Set up the Java Development Kit (JDK).
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # Step 3: Set up the Android NDK.
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d # The version containing glslc
          add-to-path: true

      # Step 4: REMOVED the 'Add NDK glslc to PATH' step as it's no longer needed.

      # Step 5: Create the necessary Gradle configuration files on the fly.
      - name: Create Gradle Build Files
        run: |
          echo "pluginManagement { repositories { google(); mavenCentral(); gradlePluginPortal() } }" > settings.gradle
          echo "dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS); repositories { google(); mavenCentral() } }" >> settings.gradle
          echo "rootProject.name = 'SLearn'" >> settings.gradle
          echo "include ':app'" >> settings.gradle
          echo "plugins { id 'com.android.application' version '8.2.0' apply false }" > build.gradle

      # Step 6: Generate the Gradle Wrapper scripts (gradlew).
      - name: Generate Gradle Wrapper
        run: gradle wrapper

      # Step 7: Grant execute permission to the Gradle wrapper.
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 8: Build the application using the wrapper.
      - name: Build with Gradle Wrapper
        run: ./gradlew :app:assembleDebug

      # Step 9: Upload the final build artifact.
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk